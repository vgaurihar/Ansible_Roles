---
## Below playbook installs grails 2.3.8 and java 1.6.0_45 for NFV BUILD 
## This playbook should run on ansible server itself to perform NFV-BUILD
## then copy NFVController.war to /etc/ansible/roles/apiservers/files
## further war file will be push by apiserver playbook and copied over to respective apiservers alongwith tomcat & other process stop/start action.
## this playbook needs no manual modification or changes 
## all variables defined in this playbook relates to /etc/ansible/vars/main.yml file.
  
  - name: copy jdk 1.6.0_45.tar.gz under /usr/local path 
    copy: src=jdk1.6.0_45.tar.gz dest=/usr/local/ owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }}

  - name: extract jdk1.6.0._45.tar.gz on /usr/local path
    command: chdir=/usr/local tar xvf jdk1.6.0_45.tar.gz -C /usr/local creates=/usr/local/java

  - name: Create symlink to /usr/local/java --> /usr/local/jdk1.6.0_45 
    file: src=/usr/local/jdk1.6.0_45 dest=/usr/local/java state=link owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }} force=yes

  - name: change the ownership of extracted java jdk1.6.0_45 
    command: chown -R {{ ansible_ssh_user }}:{{ ansible_ssh_user }} /usr/local/java

  - name: create /etc/profile from template profile.j2
    template: src=profile.j2 dest=/etc/profile backup=yes

  - shell: source /etc/profile
    args:
     executable: /bin/bash

  - name: install curl=7.35 & unzip=6.0 & mysql-client=5.5.46 packages required for grails 2.3.8 installation
    apt: pkg={{ item }} state=installed
    with_items:
    - curl=7.35.0-1ubuntu2.5
    - unzip=6.0-9ubuntu1.5
    - mysql-client=5.5.46-0ubuntu0.14.04.2
    - ant

  - name: install gvmtools required for grails 2.3.8 installation
#    shell: "curl -s --ipv4 get.gvmtool.net | bash"
    shell: "curl -s --ipv4 get.sdkman.io   | bash"
    args: 
     executable: /bin/bash

  - name: source /root/.sdkman/bin/sdkman-init.sh required for grails 2.3.8 installation
    shell: export JAVA_HOME={{ lookup('env', 'JAVA_HOME') }}  ; source "/root/.sdkman/bin/sdkman-init.sh" 
    args: 
     executable: /bin/bash

  - name: Install grails 2.3.8 package
    shell: export PATH={{ lookup('env', 'PATH') }} ; echo Yes | bash -lc "sdk install grails 2.3.8"
    args: 
     executable: /bin/bash

  - name: disable git ssl verification 
    shell: git config --global http.sslverify false

  - name: git clone nfvcontroller-api repo on path /home/{{ ansible_ssh_user }}
    command: chdir=/home/{{ ansible_ssh_user }}/ git clone https://{{ stash_user }}:{{ stash_password }}@stash.gcv-cloud.com/scm/nlb/nfvcontroller-api.git
    ignore_errors: true # if repo is already present it throws errors and exit out so to avoid this ignore_errors parameter is used.

  - name: git clone nfvcontroller_poller repo on path /home/{{ ansible_ssh_user }}
    command: chdir=/home/{{ ansible_ssh_user }}/ git clone https://{{ stash_user }}:{{ stash_password }}@stash.gcv-cloud.com/scm/nlb/nfvcontroller_poller.git
    ignore_errors: true # if repo is already present it throws errors and exit out so to avoid this ignore_errors parameter is used.

  - name: remove /nfvcontroller-api/target/classes/* & /nfvcontroller-api/target-eclipse/classes/* for fresh NFV build
    shell: rm -rf /home/{{ ansible_ssh_user }}/nfvcontroller-api/target/classes/*
  - shell: rm -rf /home/{{ ansible_ssh_user }}/nfvcontroller-api/target-eclipse/classes/*

  - name: copy DBconnect.properties on apiserver which contains DB connection info.
    template: src=DBConnect.properties.j2 dest=/home/{{ ansible_ssh_user }}/nfvcontroller-api/src/java/DBConnect.properties
 
  - name: copy build.xml.j2 template on buildbox server on path /home/{{ ansible_ssh_user }}/nfvcontroller_poller
    template: src=build.xml.j2 dest=/home/{{ ansible_ssh_user }}/nfvcontroller_poller/build.xml

  - name: Perform NFV build using grails first compile then create war 
    command: chdir=/home/{{ ansible_ssh_user }}/nfvcontroller-api   bash -lc "/root/.sdkman/candidates/grails/2.3.8/bin/grails compile" 
  - command: chdir=/home/{{ ansible_ssh_user }}/nfvcontroller-api   bash -lc "/root/.sdkman/candidates/grails/2.3.8/bin/grails war"

  - name: copy NFVController.war to ~/nfv_ansible_install/ansible/roles/api/file
    copy: src="/home/{{ ansible_ssh_user }}/nfvcontroller-api/target/NFVController.war" dest="/home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/api/files" owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }}

## in canse of NFV poller functality actually it checks out for cpu_threshold_ratio, ram_threshold_ratio parameters. these parameters are related to clusters & 
## disk_threshold_ratio is related to dsclusters, so we are checking threshold values of these parameters after every five minutes using poller.
## if it crosses theshold parameters then clusters & dsclusters get inactive.

  - name: compile and make NFVControllerPoller.jar on path /home/{{ ansible_ssh_user }}/nfvcontroller_poller/
    command: chdir=/home/{{ ansible_ssh_user }}/nfvcontroller_poller  bash -lc "/usr/bin/ant"

  - name: copy /home/{{ ansible_ssh_user }}/nfvcontroller_poller/NFVControllerPoller.jar on path /home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/buildbox/files/ntt/NFVControllerPoller/
    copy: src=/home/{{ ansible_ssh_user }}/nfvcontroller_poller/NFVControllerPoller.jar  dest=/home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/buildbox/files/ntt/NFVControllerPoller/

  - name: modify db ip address in poller configuration using template
    template: src=applicationContext-data.xml.j2 dest=/home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/buildbox/files/ntt/NFVControllerPoller/applicationContext-data.xml

  - name: update db ip address in poller configuration jar file
    command: /usr/local/java/bin/jar uf /home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/buildbox/files/ntt/NFVControllerPoller/NFVControllerPoller.jar /home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/buildbox/files/ntt/NFVControllerPoller/applicationContext-data.xml

  - name: copy jars directory on api servers playbook files path.
    command: chdir=/home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/buildbox/files  tar czvf /home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/api/files/jars.tar.gz  jars

  - name: copy ntt directory on api servers playbook files path.
    command: chdir=/home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/buildbox/files  tar czvf /home/{{ ansible_ssh_user }}/nfv_ansible_install/ansible/roles/api/files/ntt.tar.gz  ntt

